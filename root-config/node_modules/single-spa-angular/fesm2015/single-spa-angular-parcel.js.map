{"version":3,"file":"single-spa-angular-parcel.js","sources":["../../../libs/single-spa-angular/parcel/src/parcel.component.ts","../../../libs/single-spa-angular/parcel/src/parcel.module.ts","../../../libs/single-spa-angular/parcel/src/single-spa-angular-parcel.ts"],"sourcesContent":["import {\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { Parcel, ParcelConfig, AppProps } from 'single-spa';\n\nconst enum Action {\n  Mount = 'mount',\n  Update = 'update',\n  Unmount = 'unmount',\n}\n\n@Component({\n  selector: 'parcel',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ParcelComponent implements OnChanges, OnInit, OnDestroy {\n  @Input() config: ParcelConfig | null = null;\n  @Input() mountParcel: AppProps['mountParcel'] | null = null;\n  @Input() onParcelMount: (() => void) | null = null;\n  @Input() wrapWith = 'div';\n  @Input() customProps: object = {};\n  @Input() appendTo: Node | null = null;\n  @Input() handleError = (error: Error) => console.error(error);\n\n  private hasError = false;\n  private unmounted?: boolean;\n  private wrapper: HTMLElement | null = null;\n  private parcel: Parcel | null = null;\n  private task: Promise<void> | null = null;\n\n  constructor(private host: ElementRef<HTMLElement>) {}\n\n  ngOnChanges(): void {\n    this.scheduleTask(Action.Update, () => {\n      if (this.parcel !== null && this.parcel.update) {\n        return this.parcel.update(this.customProps);\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.scheduleTask(Action.Mount, () => {\n      if (this.mountParcel === null) {\n        throw new Error(\n          'single-spa-angular: the [mountParcel] binding is required when using the <parcel> component. You can either (1) import mountRootParcel from single-spa or (2) use the mountParcel prop provided to single-spa applications.',\n        );\n      }\n\n      this.wrapper = document.createElement(this.wrapWith);\n\n      if (this.appendTo !== null) {\n        this.appendTo.appendChild(this.wrapper);\n      } else {\n        this.host.nativeElement.appendChild(this.wrapper);\n      }\n\n      this.parcel = this.mountParcel(this.config!, {\n        ...this.customProps,\n        domElement: this.wrapper,\n      });\n\n      if (this.onParcelMount !== null) {\n        this.parcel.mountPromise.then(this.onParcelMount);\n      }\n\n      this.unmounted = false;\n      return this.parcel.mountPromise;\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.scheduleTask(Action.Unmount, () => {\n      if (this.parcel !== null && this.parcel.getStatus() === 'MOUNTED') {\n        return this.parcel.unmount();\n      }\n    });\n\n    if (this.wrapper !== null) {\n      this.wrapper.parentNode!.removeChild(this.wrapper);\n    }\n\n    this.unmounted = true;\n  }\n\n  private scheduleTask(action: Action, task: () => void | Promise<any>): void {\n    if (this.hasError && action !== Action.Unmount) {\n      // In an error state, we don't do anything anymore except for unmounting\n      return;\n    }\n\n    this.task = (this.task || Promise.resolve())\n      .then(() => {\n        if (this.unmounted && action !== Action.Unmount) {\n          // Never do anything once the angular component unmounts\n          return;\n        }\n\n        return task();\n      })\n      .catch((error: Error) => {\n        this.task = Promise.resolve();\n        this.hasError = true;\n\n        if (error?.message) {\n          error.message = `During '${action}', parcel threw an error: ${error.message}`;\n        }\n\n        if (typeof this.handleError === 'function') {\n          this.handleError(error);\n        } else {\n          setTimeout(() => {\n            throw error;\n          });\n        }\n\n        // No more things to do should be done -- the parcel is in an error state\n        throw error;\n      });\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { ParcelComponent } from './parcel.component';\n\n@NgModule({\n  declarations: [ParcelComponent],\n  exports: [ParcelComponent],\n})\nexport class ParcelModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}