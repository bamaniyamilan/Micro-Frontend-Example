!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core")):"function"==typeof define&&define.amd?define("single-spa-angular/parcel",["exports","@angular/core"],t):t(((e="undefined"!=typeof globalThis?globalThis:e||self)["single-spa-angular"]=e["single-spa-angular"]||{},e["single-spa-angular"].parcel={}),e.ng.core)}(this,(function(e,t){"use strict";var n=function(){function e(e){this.host=e,this.config=null,this.mountParcel=null,this.onParcelMount=null,this.wrapWith="div",this.customProps={},this.appendTo=null,this.handleError=function(e){return console.error(e)},this.hasError=!1,this.wrapper=null,this.parcel=null,this.task=null}return e.prototype.ngOnChanges=function(){var e=this;this.scheduleTask("update",(function(){if(null!==e.parcel&&e.parcel.update)return e.parcel.update(e.customProps)}))},e.prototype.ngOnInit=function(){var e=this;this.scheduleTask("mount",(function(){if(null===e.mountParcel)throw new Error("single-spa-angular: the [mountParcel] binding is required when using the <parcel> component. You can either (1) import mountRootParcel from single-spa or (2) use the mountParcel prop provided to single-spa applications.");return e.wrapper=document.createElement(e.wrapWith),null!==e.appendTo?e.appendTo.appendChild(e.wrapper):e.host.nativeElement.appendChild(e.wrapper),e.parcel=e.mountParcel(e.config,Object.assign(Object.assign({},e.customProps),{domElement:e.wrapper})),null!==e.onParcelMount&&e.parcel.mountPromise.then(e.onParcelMount),e.unmounted=!1,e.parcel.mountPromise}))},e.prototype.ngOnDestroy=function(){var e=this;this.scheduleTask("unmount",(function(){if(null!==e.parcel&&"MOUNTED"===e.parcel.getStatus())return e.parcel.unmount()})),null!==this.wrapper&&this.wrapper.parentNode.removeChild(this.wrapper),this.unmounted=!0},e.prototype.scheduleTask=function(e,t){var n=this;this.hasError&&"unmount"!==e||(this.task=(this.task||Promise.resolve()).then((function(){if(!n.unmounted||"unmount"===e)return t()})).catch((function(t){throw n.task=Promise.resolve(),n.hasError=!0,(null==t?void 0:t.message)&&(t.message="During '"+e+"', parcel threw an error: "+t.message),"function"==typeof n.handleError?n.handleError(t):setTimeout((function(){throw t})),t})))},e}();n.decorators=[{type:t.Component,args:[{selector:"parcel",template:"",changeDetection:t.ChangeDetectionStrategy.OnPush}]}],n.ctorParameters=function(){return[{type:t.ElementRef}]},n.propDecorators={config:[{type:t.Input}],mountParcel:[{type:t.Input}],onParcelMount:[{type:t.Input}],wrapWith:[{type:t.Input}],customProps:[{type:t.Input}],appendTo:[{type:t.Input}],handleError:[{type:t.Input}]};var r=function(){};r.decorators=[{type:t.NgModule,args:[{declarations:[n],exports:[n]}]}],e.ParcelComponent=n,e.ParcelModule=r,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=single-spa-angular-parcel.umd.min.js.map